// <auto-generated />
using System;
using InnatAPP.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InnatAPP.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InnatAPP.Domain.Entities.Avaliador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Avaliadores", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e6e97a8f-dc2f-4a75-a5ff-6f2d2f6a9d02"),
                            Nome = "Drones"
                        },
                        new
                        {
                            Id = new Guid("ae32fc1f-14e2-470c-aecf-cf52a79d4e4f"),
                            Nome = "Tratores"
                        },
                        new
                        {
                            Id = new Guid("b1b4d98c-2cc1-4a08-b7d9-baf8403c2a23"),
                            Nome = "Semeadeiras"
                        },
                        new
                        {
                            Id = new Guid("8c0fc7a1-63d2-40d6-b31c-1c0a741d42b7"),
                            Nome = "Colheitadeiras"
                        },
                        new
                        {
                            Id = new Guid("9ed18ed4-17ef-4a6a-9e0b-6cbb7eeb88c2"),
                            Nome = "Pulverizadores"
                        },
                        new
                        {
                            Id = new Guid("03b6e5d5-b98e-4436-9115-2db0220c7381"),
                            Nome = "Arados"
                        },
                        new
                        {
                            Id = new Guid("72476c3f-2a83-4686-94bc-d3b3c9d33c2e"),
                            Nome = "Grades"
                        },
                        new
                        {
                            Id = new Guid("d19c882e-19c0-4395-a2c6-f6a80f5dbb0e"),
                            Nome = "Subsoladores"
                        },
                        new
                        {
                            Id = new Guid("cad2a5a7-77a6-4b1b-85f0-b643b2489fd3"),
                            Nome = "Enxadas Rotativas"
                        },
                        new
                        {
                            Id = new Guid("a9dcadad-dde9-4d8f-b91a-0e6eb396f582"),
                            Nome = "Escarificadores"
                        },
                        new
                        {
                            Id = new Guid("3c80cbd3-df45-476b-9bfb-e50d7e89940e"),
                            Nome = "Adubadoras"
                        },
                        new
                        {
                            Id = new Guid("d86c580e-88e5-42cf-882c-175848229dbf"),
                            Nome = "Enfardadoras"
                        });
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.EmailAlternativo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EnderecoEmail")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("EmailsAlternativos", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Mensagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)");

                    b.HasKey("Id");

                    b.ToTable("Mensagens", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("IdCategoria")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEmpresa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Nota")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)")
                        .HasDefaultValue(5m);

                    b.Property<int>("TotalReviews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AtualizadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Curtidas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Descurtidas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("IdAvaliador")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProduto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Nota")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("Resenha")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IdAvaliador");

                    b.HasIndex("IdProduto");

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Telefone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Telefones", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biografia")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Avaliador", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("InnatAPP.Domain.Entities.Avaliador", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.EmailAlternativo", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Usuario", "Usuario")
                        .WithMany("EmailsAlternativos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Usuario", "Usuario")
                        .WithOne()
                        .HasForeignKey("InnatAPP.Domain.Entities.Empresa", "IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Produto", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InnatAPP.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Produtos")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Review", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Avaliador", "Avaliador")
                        .WithMany("Reviews")
                        .HasForeignKey("IdAvaliador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("InnatAPP.Domain.Entities.Produto", "Produto")
                        .WithMany("Reviews")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliador");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Telefone", b =>
                {
                    b.HasOne("InnatAPP.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Telefones")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("InnatAPP.Domain.ValueObjects.TipoUsuario", "TipoUsuario", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TipoUsuario");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("TipoUsuario")
                        .IsRequired();
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Avaliador", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Produto", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("InnatAPP.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("EmailsAlternativos");

                    b.Navigation("Enderecos");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
